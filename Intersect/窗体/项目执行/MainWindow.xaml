<Window x:Class="Intersect.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
        xmlns:cls="clr-namespace:Intersect"
        Title="主界面" Width="1200" Height="800" Top="5" Loaded="Window_Loaded">

    <Window.Resources>
        <Style x:Key="SubTitle">
            <Setter Property="TextBlock.Height" Value="30"></Setter>
            <Setter Property="TextBlock.Background" Value="#5bc0de"></Setter>
            <Setter Property="TextBlock.Foreground" Value="White"></Setter>
            <Setter Property="TextBlock.Padding" Value="5,7,5,9"></Setter>
            <Setter Property="TextBlock.FontSize" Value="12"></Setter>
        </Style>
        <Style x:Key="ListItem" TargetType="ListBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#cccccc" BorderThickness="0,0,0,1">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#f5f5f5"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListItemStackPanel" TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="ListBoxItemTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
        </Style>
        <Style x:Key="ConfigListBoxItemTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Padding" Value="2"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
        </Style>
        <Style x:Key="ListBoxItemContent" TargetType="TextBlock">
            <Setter Property="Padding" Value="3"></Setter>
        </Style>
        <Style x:Key="ListBoxItemKey" TargetType="TextBlock">
            <Setter Property="Background" Value="#dddddd"></Setter>
        </Style>
        <Style x:Key="StepBarItem" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <!--<Setter Property="FontWeight" Value="Bold"></Setter>-->
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>
        <Style x:Key="StepBarItemSelected" TargetType="TextBlock">
            <Setter Property="Background" Value="#5bc0de"></Setter>
        </Style>
        <Style x:Key="StepBar" TargetType="Border">
            <Setter Property="CornerRadius" Value="5,5,5,5"></Setter>
            <Setter Property="BorderBrush" Value="#cccccc"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Margin" Value="10,10,10,10"></Setter>
            <Setter Property="Padding" Value="3"></Setter>
        </Style>
        <Style x:Key="SettingTitle" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Padding" Value="0,5,0,5"></Setter>
            <Setter Property="TextWrapping" Value="wrap"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
        </Style>
        <Style x:Key="GroupBoxHeader" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
        </Style>
        <Style x:Key="ListBox" TargetType="ListBox">
            <Setter Property="Height" Value="350"></Setter>
            <Setter Property="BorderBrush" Value="#cccccc"></Setter>
            <Setter Property="BorderThickness" Value="0,1,0,1"></Setter>
        </Style>
        <Style x:Key="ErrorTip" TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <Border CornerRadius="20" Height="20" Width="20" Background="Red" DockPanel.Dock="Left">
                                <TextBlock Height="20" Width="20" Background="{x:Null}" Foreground="Yellow"  Margin="0,-4,0,0"
                                           FontSize="20" FontWeight="Bold" TextAlignment="Center">!</TextBlock>
                            </Border>
                            <AdornedElementPlaceholder DockPanel.Dock="Right"/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="BorderBrush" Value="Red"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NotErrorTip" TargetType="StackPanel">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border BorderBrush="Red" BorderThickness="0">
                                    <AdornedElementPlaceholder/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="49"></RowDefinition>
            <RowDefinition Height="750"></RowDefinition>
        </Grid.RowDefinitions>
        <Popup x:Name="SelectHousePopup" PlacementTarget="{Binding ElementName=SelectProjectAndMapButton}" AllowsTransparency="True" PopupAnimation="Fade" VerticalAlignment="Top">
            <Border BorderBrush="#5bc0de" BorderThickness="1" Panel.ZIndex="10">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="15" Direction="-90" RenderingBias="Quality" ShadowDepth="2"></DropShadowEffect>
                </Border.Effect>
            </Border>
        </Popup>
        

        <StackPanel Grid.Row="0" Background="#337ab7">
            <TextBlock FontSize="19" Foreground="White" Padding="7" TextAlignment="Center">
                村镇区域空间布局优化情景仿真软件
            </TextBlock>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="480"></ColumnDefinition>
                <ColumnDefinition Width="720"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Height="750">
                <DockPanel Background="#5bc0de" Height="50">
                    <TextBlock Name="ProgramListTitle" DockPanel.Dock="Left" Style="{StaticResource SubTitle}"></TextBlock>
                    <Button Name="CreateProgramButton" Style="{StaticResource SuccessButton}" HorizontalAlignment="Right" Margin="0 , 5 , 5 ,5" Width="100" Click="CreateProgramButtonClick">
                        创建新方案
                    </Button>
                </DockPanel>
                <ListBox Name="ProgramList" Style="{StaticResource ListBox}" BorderThickness="0" Height="700" Width="480">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Name="ProgramStackPanel" Style="{StaticResource ListItemStackPanel}" Width="480">
                                <TextBlock Name="ProgramIDTextBlock" Visibility="Collapsed" Text="{Binding Path=id}"></TextBlock>
                                <Grid Height="50">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="9*"></ColumnDefinition>
                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Name="ProgramNameTextBlock" Style="{StaticResource ListBoxItemTitle}" Text="{Binding Path=name}" MouseDown="ProgramNameTextBlockMouseDown"></TextBlock>
                                    <Grid Grid.Column="0" Visibility="Collapsed" Name="ProgramNameGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="8*"></ColumnDefinition>
                                            <ColumnDefinition Width="2*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="0" Name="ProgramNameTextBox" FontSize="16" Padding="5"></TextBox>
                                        <Button Grid.Column="1" Name="ProgramNameButton" Style="{StaticResource OperationButton_Small}" Height="30" Click="ProgramNameButtonClick">完成</Button>
                                    </Grid>
                                    <StackPanel Grid.Column="1">
                                        <Image Source="/Image/cancel.png" Width="15" Height="20" Name="DeleteProgramButton">
                                            <Image.Visibility>
                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBoxItem}}" Path="IsMouseOver">
                                                    <Binding.Converter>
                                                        <cls:IsMouseOverToImageVisbilityConverter></cls:IsMouseOverToImageVisbilityConverter>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Image.Visibility>
                                        </Image>
                                    </StackPanel>
                                </Grid>
                                <cls:ProgramStepUserControl x:Name="ProgramStepUserControl" Height="500" Width="480">
                                    <cls:ProgramStepUserControl.Visibility>
                                        <Binding Path="visible" Mode="TwoWay">
                                            <Binding.Converter>
                                                <cls:ProgramVisbleToStackpanelVisibiltyConverter></cls:ProgramVisbleToStackpanelVisibiltyConverter>
                                            </Binding.Converter>
                                        </Binding>
                                    </cls:ProgramStepUserControl.Visibility>
                                </cls:ProgramStepUserControl>   
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Border Margin="0, -750, 0, 0" Height="750" BorderBrush="Black" BorderThickness="1" Background="#70000000" Visibility="Collapsed" Name="ProgramListMask">
                    <Grid>
                        <TextBlock Margin="0" TextWrapping="Wrap" Text="执 行 中 ..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26.667" FontWeight="Bold" Foreground="White"/>
                    </Grid>
                </Border>
            </StackPanel>
            <StackPanel Background="Gray" Grid.Column="1" Height="750">
                <i:WindowsFormsHost Name="toolbarHost" Height="30" Visibility="Visible"/>
                <i:WindowsFormsHost Name="tocHost" Height="720" Width="200" Margin="-520,0,0,0"  Visibility="Visible"/>
                <i:WindowsFormsHost Name="mapHost" Height="720" Margin="200,-720,0,0" Visibility="Visible"/>
                <Popup PopupAnimation="Fade" Width="100" Height="100" Placement="Right"  AllowsTransparency="True"
                       StaysOpen="True" IsOpen="True" VerticalOffset="600" HorizontalOffset="300">
                    <StackPanel Height="100" Background="White">
                        <TextBlock Height="25" Width="100" Text="0.6~1" Background="Red" FontSize="18" TextAlignment="Center"></TextBlock>
                        <TextBlock Height="25" Width="100" Text="0.3~0.6" Background="Green" FontSize="18" TextAlignment="Center"></TextBlock>
                        <TextBlock Height="25" Width="100" Text="0~0.3" Background="Blue" FontSize="18" TextAlignment="Center"></TextBlock>
                        <TextBlock Height="25" Width="100" Text="0" Background="White" FontSize="18" TextAlignment="Center"></TextBlock>
                    </StackPanel>
                </Popup>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
